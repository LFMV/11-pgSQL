CREATE TABLE "users" (
	"user_id" SERIAL PRIMARY KEY,
	"username" VARCHAR	
);

-- te deja agregar manualmente el indice
CREATE TABLE "users2" (
	"user_id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	"username" VARCHAR	
);

-- crea no necesitas poner el incremental
CREATE TABLE "users3" (
	"user_id" INTEGER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
	"username" VARCHAR	
);

-- crea de a partir del 100 de 2 en 2
CREATE TABLE "users4" (
	"user_id" INTEGER GENERATED ALWAYS AS IDENTITY (START WITH 100 INCREMENT BY 2),
	"username" VARCHAR	
);

-- llave compuesta son combiaciones únicas
CREATE TABLE userDual (
	id1 INT,
	id2 INT,
	PRIMARY KEY (id1, id2)
);

-- Generación de pk UUIDs
CREATE EXTENSION IF NOT EXISTS "uuid-ossp";
SELECT gen_random_uuid(), uuid_generate_v5();
DROP EXTENSION "uuid-ossp";

CREATE TABLE "users5" (
	"user_id" UUID DEFAULT uuid_generate_v4() PRIMARY KEY,
	"username" VARCHAR	
);

-- secuencias
CREATE SEQUENCE user_sequence;
DROP SEQUENCE user_sequence;

SELECT currval('user_sequence'), nextval('user_sequence'), currval('user_sequence');

CREATE TABLE "users6" (
	"user_id" INTEGER PRIMARY KEY DEFAULT nextval('user_sequence'),
	"username" VARCHAR	
);